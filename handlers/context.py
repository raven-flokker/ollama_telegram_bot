from aiogram import Router, F
from aiogram.filters import Command
from services.memory import get_context

router = Router()


@router.message(Command("context"))
async def cmd_context(message):
    context = get_context(message.from_user.id)

    # –£–±–∏—Ä–∞–µ–º system-—Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –æ–Ω–æ –Ω–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    chat_history = [msg for msg in context if msg["role"] != "system"]

    if not chat_history:
        await message.reply("–ú—è—É. –Ø –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–Ω—é. ü§Ø")
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10)
    lines = ["üìù *–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏:*", ""]
    for msg in chat_history[-10:]:  # –ü–æ–∫–∞–∂–µ–º –º–∞–∫—Å–∏–º—É–º 10
        if msg["role"] == "user":
            lines.append(f"üü¢ *–¢—ã:* {msg['content']}")
        elif msg["role"] == "assistant":
            lines.append(f"üîµ *–ö–æ—Ç–∏–∫:* {msg['content']}")

    await message.reply("\n".join(lines), parse_mode="Markdown")
